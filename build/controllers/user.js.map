{"version":3,"sources":["../../src/controllers/user.js"],"names":["userController","login","req","res","user","findOne","attributes","where","id","body","userId","result","status","json","send","adminLogin","findByPk","params","get","getAll","pageNo","page","offset","limit","findAll","create","console","log","role","dataValues","update","destroy","getAllImei","module","exports"],"mappings":"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","sourcesContent":["import { user } from '../database/models';\nvar userController = {};\n\n\nuserController.login = async (req, res) => {\n  try {\n    const result = await user.findOne({\n      attributes: ['imei'],\n      where: {\n        id: req.body.userId\n      }\n    });\n    res.status(200).json(result);\n  } catch (error) {\n    res.status(400).send(error);\n  }\n}\n\nuserController.adminLogin = async (req, res) => {\n  try {\n    const result = await user.findByPk(req.params.userId);\n    res.status(200).json(result);\n  } catch (error) {\n    res.status(400).send(error);\n  }\n}\n\nuserController.get = async (req, res) => {\n  try {\n    const result = await user.findByPk(req.params.userId);\n    res.status(200).json(result);\n  } catch (error) {\n    res.status(400).send(error);\n  }\n}\n\nuserController.getAll = async (req, res) => {\n  try {\n    let pageNo = req.params.page;\n    let offset = (pageNo - 1) * 15;\n    let limit = 15;\n    const result = await user.findAll({ offset, limit });\n    res.status(200).json(result);\n  } catch (error) {\n    res.status(400).send(error);\n  }\n}\n\nuserController.create = async (req, res) => {\n  try {\n    let body = req.body;\n    console.log(body);\n    if (body.role === null || typeof (body.role) === 'undefined')\n      res.status(400).send(\"Please provide a specific role to user.\");\n    else {\n      const result = await user.create(body);\n      res.status(200).json(result.dataValues.id);\n    }\n  }\n  catch (error) {\n    res.status(400).send(error);\n  }\n}\n\nuserController.update = async (req, res) => {\n  try {\n    let body = req.body;\n    const result = await user.update(body, {\n      where: {\n        id: req.params.userId\n      }\n    });\n    res.status(200).json(result);\n  } catch (error) {\n    res.status(400).send(error);\n  }\n}\n\nuserController.delete = async (req, res) => {\n  try {\n    const result = await user.destroy({\n      where: {\n        id: req.params.userId\n      }\n    });\n    res.status(200).json(result);\n  } catch (error) {\n    res.status(400).send(error);\n  }\n}\n\nuserController.getAllImei = async (req, res) => {\n  try {\n    const result = await user.findOne({\n      attributes: ['imei'],\n      where: {\n        id: req.params.userId\n      }\n    });\n    res.status(200).json(result);\n  } catch (error) {\n    res.status(400).send(error);\n  }\n}\n\n\nmodule.exports = userController;"],"file":"user.js"}